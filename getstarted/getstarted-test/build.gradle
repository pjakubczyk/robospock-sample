/*--------------------------------------------------------------------*/
/*---- Local Repository ----------------------------------------------*/
// Groovy nor java plugin doesn't understand how support dependencies are stored
// local.properties is generated by android plugin which points to the internal repository
def props = new Properties()
file("../local.properties").withInputStream {
    stream -> props.load(stream)
}

repositories {
    maven {
        // this url is required for Robolectric 2.3
        // older versions used support package from Maven Central
        // current uses package from android repository
        url new File(props['sdk.dir'] + "/extras/android/m2repository/").toURI()
    }
}

/*--------------------------------------------------------------------*/


apply plugin: 'groovy'

// shortcut for project under test - used in later configurations
def application = project(":getstarted")

def aarPath = application.file('build/intermediates/exploded-aar').path
def intermediates = application.file('build/intermediates').path


dependencies {
    // groovy version depedency
    compile "org.codehaus.groovy:groovy-all:1.8.6"

    // Robospock depedency
    compile 'org.robospock:robospock:0.5.0'
    compile 'cglib:cglib-nodep:3.1'

    // Mockito depedency
    testCompile "org.mockito:mockito-all:1.9.5"


    // this dependency is only for making Android Studio aware of Application under test sources
    compile application

    // add to classpath compiled sources from Application
    // This path is the same as in Application build.gradle file - step zip2jar
    compile fileTree(dir: application.file("build/libs"), include: "*.jar")

    // java plugin doesn't understand aar dependencies
    // unfortunately android plugin unpack given archives in Maven Local repository
    // those lines point to extracted aar files in Application build directory
    // Any other aar dependencies must be reflected here
    compile fileTree(dir: application.file(aarPath + '/com.android.support/appcompat-v7/20.0.0'), include: ['*.jar'])
    compile fileTree(dir: application.file(aarPath + '/com.android.support/support-v4/20.0.0'), include: ['*.jar'])
}


test {

    // Starting from Robolectric 2.3 it's possible to pass configuration paths to runtime code
    // Pass AndroidManifest file
    systemProperty 'android.manifest', application.file('/src/main/AndroidManifest.xml')

    // Pass assets and resources paths
    // Since we have aar dependencies with Android Resources the original resources path
    // doesn't contain all resources
    // Android plugin produces extra data for all flavours and build types
    systemProperty 'android.resources', intermediates + '/res/release'
    systemProperty 'android.assets', intermediates + '/assets/release'

    // show test on terminal
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }

    // print entire error on terminal
    testLogging {
        lifecycle {
            exceptionFormat "full"
        }
    }
}

// Ensure that Application generated all required files
tasks["test"].dependsOn application.tasks["zip2jar"]
